[[{"l":"Home"},{"l":"About","p":["This site includes my notes and useful information for security research and penetration testing purposes."]},{"l":"Blog","p":["Check out the blog for updates to the site or anything interesting I decide to post:"]},{"l":"Contact","p":["Email","Twitter"]}],[{"l":"Service Management"},{"l":"Determine Service Manager","p":["You can determine the service manager that is in use by the system by running the following commands:"]},{"l":"rpm","p":["You can determine which service manager is in use on systems using rpm (such as CentOS, Red Hat, etc.) via the following command:"]},{"i":"dpkg--systemd","l":"dpkg / systemd","p":["You can identify that systemd is in use by running the following:","You will see that /sbin/init should have a symbolic link to /lib/systemd/systemd.","Additionally, you can run the command listed below and it should tell you that the /sbin/init in use is using systemd."]}],[{"l":"FreeBSD","p":["FreeBSD uses rc scripts for startup services.","The configuration files for rc are located at /etc/defaults/rc.conf and /etc/rc.conf."]},{"l":"Service Command","p":["The service command is used to control and manage rc services in FreeBSD.","The service command pulls information from /etc/rc.d/ and /usr/local/etc/rc.d/."]},{"l":"Show Started Services"},{"l":"Show Installed Services"},{"i":"look-at-service-scripts-for-dependenciesother-info","l":"Look at Service Scripts for Dependencies/Other Info"},{"l":"Start a Service"},{"l":"Check Status of a Service"},{"l":"Stop a Service"}],[{"i":"linux-centos-debian-etc","l":"Linux (CentOS, Debian, etc.)"},{"l":"Upstart","p":["In Upstart, run levels are defined in /etc/init/rc-sysinit.conf.","Upstart uses \"Jobs\", which are defined in /etc/init/. These jobs fall into three categories:","Task Jobs - Task Jobs define a process that has a definite end time.","Service Jobs - Service Jobs define a process which is designed to be long-running with no defined end time.","Abstract Jobs - Abstract Jobs spawn no child process, but they can be manually started or stopped. These are primarily used within upstart itself.","Upstart event information is described further in the upstart manual man upstart-events.","Upstart can easily define service configurations in the following types of files: /etc/init/service.conf.","UFW Service Example:"]},{"l":"Interact with Upstart Services"},{"l":"List Upstart Jobs"},{"l":"List Running Upstart Jobs"},{"i":"query-individual-service-status","l":"Query Individual Service Status'"},{"l":"Start Service"},{"l":"Stop Service"},{"l":"Systemd","p":["Systemd makes use of unit files.","Uses default target to determine which units are started at startup."]},{"i":"get-the-default-target-for-the-system","l":"Get the default target for the system:"},{"l":"View cgroup hierarchy"},{"l":"View cgroup in process list"},{"l":"View resource Utilization by cgroups"},{"l":"Analyze length of time to start service units"},{"l":"Troubleshoot units by seeing length of time to start"},{"l":"List service units with systemctl"},{"l":"List Startup Services"},{"l":"View Status of a Service"},{"l":"View the Unit File for a Service"},{"l":"Start a Service"},{"l":"Stop a Service"},{"l":"View Service Dependencies"},{"i":"list-required-and-wanted-units-greenactive-redinactive","l":"List Required and Wanted Units (green=active, red=inactive)"},{"l":"Disable Service Start at Boot"},{"i":"make-it-so-a-service-cant-be-started","l":"Make it so a Service can't be started","p":["The mask command makes it so that you can no longer start the service via the CLI.","rc-local.service starts /etc/rc.d/rc.local... You need to ensure /etc/rc.local has execute permissions."]}],[{"l":"Solaris"},{"i":"service-management-facility-smf","l":"Service Management Facility (SMF)","p":["SMF was added in Solaris 10.","Services are defined by manifest XML files located in /var/svc/manifest/","Example:/var/svc/manifest/network/ssh.xml","SMF relies on a database that is located at /etc/svc/repository.db."]},{"l":"Show Status of Services"},{"l":"Display Information about a Specific Service"},{"l":"List Processes Associated with a Specific Service"},{"l":"Enable and Start a Service"},{"l":"View Detailed Status Information about a Specific Service"},{"l":"SysV Init","p":["Not used much anymore. Used on older Solaris systems as well as other miscellaneous Unix systems like AT&T Unix.","The first thing run by SysV Init is the script located at /etc/rc.d/rc.sysinit.","Run level service scripts located at /etc/rc.d/rcX.d/ where X is the run level."]},{"i":"managelist-init-services","l":"Manage/List init services"}],[{"l":"Boot Process","p":["Note: * NIX systems' kernel process is always /sbin/init.","Note: Boot information is typically stored in /boot/"]},{"i":"nix-boot-process","l":"*NIX Boot Process"},{"i":"1biosuefi","l":"1.BIOS/UEFI","p":["At this step, the BIOS/UEFI runs a POST to ensure that hardware and memory functions correctly. Starts the MBR."]},{"l":"2. MBR","p":["Next, the MBR loads and executes the GRUB boot loader.","Typically located at /dev/hda or /dev/sda."]},{"l":"3. GRUB","p":["The Grand Unified Boot Loader (GRUB) intializes the Kernel.","GRUB Config files is usually located at /boot/grub/grub.conf."]},{"l":"4. Kernel Initialization","p":["The Kernel executes the Kernel process /sbin/init."]},{"l":"5. Init","p":["/sbin/init looks at /etc/inittab to decide what run level to execute.","Begins execution of run level processes.","Run Levels are:","0 – halt","1 – Single user mode","2 – Multiuser, without NFS","3 – Full multiuser mode","4 – unused","5 – X11","6 – reboot"]},{"l":"6. Runlevel","p":["Run level processes are executed.","Run level folders for scripts to execute:","Run level 0 – /etc/rc.d/rc0.d/","Run level 1 – /etc/rc.d/rc1.d/","Run level 2 – /etc/rc.d/rc2.d/","Run level 3 – /etc/rc.d/rc3.d/","Run level 4 – /etc/rc.d/rc4.d/","Run level 5 – /etc/rc.d/rc5.d/","Run level 6 – /etc/rc.d/rc6.d/","You can determine your current run level using the command runlevel.","Scripts in the run level folders are pre-fixed with a K or S to tell the system if they should Kill or Start the script. These scripts are actually symbolic links to scripts in /etc/init.d/ or /etc/rc.d/init.d/."]}],[{"l":"Network Configuration Information","p":["ifconfig [-a] or ip a are the commands that will generally give you basic networking information on a nix machine."]},{"l":"Persistent Network Information","p":["Across the various nix variants, you can set and view persistent networking configurations via different mechanisms."]},{"l":"CentOS"},{"l":"Debian"},{"l":"Solaris","p":["Note: You can configure Solaris 11 networking information via: ipadm and dladm. ipadm configures network layer settings. dladm configures data-link layer settings."]},{"l":"FreeBSD"},{"l":"Systems that use NetworkManager","p":["For systems that make use of NetworkManager you can view the devices via:","Additionally, you can list connections via:"]},{"l":"NICs","p":["Network Interface Cards (NICs) are typically named in a couple of manners."]},{"l":"Kernel Naming Scheme","p":["This traditional kernel naming scheme for NICs is unpredictable and is the default if nothing specific is set.","Example: eth0"]},{"l":"On-Board Device Naming Scheme","p":["Example: eno1"]},{"l":"PCI Express Naming Scheme","p":["Example: ens1, enp2s0 (PCI 2, Slot 0)"]},{"l":"Interface MAC Naming Scheme","p":["Example: enx78e7d1ea46da"]}],[{"l":"Network Reconnaissance"},{"l":"ARP Table","p":["Viewing the ARP table can provide good passive information about active clients on the same network."]},{"l":"Routing Table","p":["The routing table for devices can tell you the default gateway and any static routes for the device."]},{"l":"Linux"},{"i":"freebsdsolaris","l":"FreeBSD/Solaris"},{"l":"All Nix Variants"},{"l":"Active Network Connections","p":["Understanding active network connections can give you a lot of information about listening services on the system as well as any current connections to or from a remote system."]},{"i":"linux-1","l":"Linux"},{"l":"Solaris"},{"l":"FreeBSD"},{"l":"DNS Servers Used","p":["Understanding any manually set DNS servers can be useful in enumerating local DNS servers that are resolving local domain names.","Note: For machines using NetworkManager, you can use the following command to find DNS servers in use: nmcli c show nic name | grep dns"]}],[{"l":"SSH Tunnels","p":["Note: You can access the SSH control channel within an SSH session via: ~C."]},{"l":"Local Port Forward"},{"l":"Remote Port Forward"},{"l":"Dynamic Proxy"},{"l":"SSH Single Pipe Invocation","p":["Run the following command on Kali Linux to create a named pipe locally that can be used for all SSH related matters:","Use -N and/or -f if you want to have SSH not start an interactive session and background the tunnel."]},{"l":"Transfer Files via SSH Pipe","p":["To transfer files via SCP through your currently instantiated SSH pipe use the following command syntax:"]},{"l":"Close SSH Pipe"},{"l":"References","p":["SSH Pipe Reference: https://blog.jakubholy.net/2010/09/10/ssh-magic-authorize-only-once-for-multiple-sshscp-invocations/"]}],[{"l":"Package Management in Debian"},{"l":"dpkg"},{"l":"List Installed Packages"},{"l":"Query a Specific Package"},{"l":"Display Status of a Package"},{"l":"List Files Inside a Package"},{"l":"ID Package where Binary is included"},{"l":"Verify Integrity of a Package"},{"l":"apt","p":["You can view sources for dpkg/apt via:"]}],[{"l":"Package Management in FreeBSD"},{"l":"Check Package Repositories on System"},{"l":"pkg_info"},{"l":"Show files for package"},{"l":"ID Package where Binary is included"},{"l":"pkgng"},{"l":"Show installed packages"},{"l":"Obtain Information about a Specific Package"},{"l":"List Files in a Package"},{"i":"id-package-where-binary-is-included-1","l":"ID Package where Binary is included"}],[{"i":"package-management-in-redhat-redhat-centos-fedora-suse","l":"Package Management in RedHat (RedHat, CentOS, Fedora, SUSE)"},{"l":"rpm"},{"l":"List Installed Packages"},{"l":"List Most Recently Installed Packages"},{"l":"Query a Specific Package"},{"l":"ID Package where Binary is included"},{"l":"List Files in a Package"},{"i":"yum--dnf","l":"yum / dnf","p":["View yum configuration files via:","You can view repos on the system by checking the following directory:","NOTE: View the BASEURL field in the repo files. This tells you where the repo is pulling from, to include local repos."]}],[{"l":"Package Management in Solaris"},{"l":"pkg tools"},{"l":"Display installed packages"},{"l":"View Information about a Package"},{"l":"ID Package where Binary is included"},{"l":"Check the Status of a pkg"},{"i":"repositories-that-packages-reference-solaris-10-and-lower","l":"Repositories that packages reference (Solaris 10 and lower)"},{"l":"Install a new Package"},{"l":"Remove a Package"},{"i":"show-the-package-sourcepublisher","l":"Show the Package Source/Publisher"}],[{"l":"Kernel Modules"},{"i":"kernel-module-locations","l":"Kernel Module Locations:"},{"i":"linux","l":"Linux:"},{"i":"solaris","l":"Solaris:"},{"i":"freebsd","l":"FreeBSD:","p":["The following command will allow you to show set paths for kernel modules in FreeBSD:"]},{"l":"View Loaded Kernel Modules","p":["Loaded Kernel Modules exist within /proc/modules."]},{"i":"linux-1","l":"Linux","p":["You can also show info about a specific module with:"]},{"i":"solaris-1","l":"Solaris"},{"i":"freebsd-1","l":"FreeBSD","p":["Use -n to dig into a specific file/module with kldstat."]}],[{"l":"Process Listings","p":["Process listings can be listed using the following commands across nix variants:","Note: Kernel threads have PPID 2 in Linux and PPID 0 on FreeBSD/Solaris."]},{"i":"linux--solaris","l":"Linux / Solaris","p":["For most Linux variants and Solaris, my goto syntax is:","Additionally, you can show GUI tree listing with -H.","Specify specific columns with -o option."]},{"l":"FreeBSD","p":["For FreeBSD, my goto syntax is:","Specify specific columns with -o option."]}],[{"l":"Syscalls"},{"i":"fork","l":"fork()","p":["Creates a copy of the running process.","Used to allocate memory for the new process and copys over information about the environment (such as who is running hte process, what the working directory is, and environment variables).","Creates a parent/child relationship."]},{"i":"exec","l":"exec()","p":["Loads the program into memory and transfers execution to it."]},{"i":"exit","l":"exit()","p":["Used to terminate self."]},{"i":"kill","l":"kill()","p":["Used to terminate an existing process"]},{"i":"wait","l":"wait()","p":["Used to await execution of a child process.","Stands by for return from child."]}],[{"l":"Drivers","p":["Windows drivers are located in C:\\Windows\\System32\\drivers\\."]},{"l":"Search for Driver Files on a Windows System Recursively"}],[{"l":"Process Listings","p":["Process listings can be listed using the following commands in windows:"]},{"l":"Basic Task List"},{"l":"WMIC"},{"l":"PowerShell"},{"l":"Remote Tasklist"}],[],[{"l":"Entry 1"},{"l":"Website Created","p":["I decided to create this website today. I abandoned all previous web hosting desires and have defaulted to using github to keep things cheap and easy.","I will update this blog as I add major additions to the content on the site."]},{"l":"Adding Operating Systems Basics","p":["Adding in operating systems basics, starting with * nix, as I have been going through my notes to add things onto the site that I find useful to reference."]}]]